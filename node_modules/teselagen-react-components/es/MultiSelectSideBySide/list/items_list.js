var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { PureComponent } from "react";
import PropTypes from "prop-types";
import { AutoSizer } from "react-virtualized/dist/commonjs/AutoSizer";

import InnerList from "./list";

var ItemsList = (_temp = _class = function (_PureComponent) {
  _inherits(ItemsList, _PureComponent);

  function ItemsList(props) {
    _classCallCheck(this, ItemsList);

    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));

    _this.update = _this.update.bind(_this);
    _this.getlistRef = _this.getlistRef.bind(_this);
    return _this;
  }

  ItemsList.prototype.update = function update() {
    this.listRef.forceUpdateGrid();
  };

  ItemsList.prototype.componentDidUpdate = function componentDidUpdate() {
    this.update();
  };

  ItemsList.prototype.getlistRef = function getlistRef(ref) {
    this.listRef = ref;
  };

  ItemsList.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        height = _props.height,
        itemHeight = _props.itemHeight,
        items = _props.items,
        offset = _props.offset,
        noItemsMessage = _props.noItemsMessage,
        noItemsRenderer = _props.noItemsRenderer,
        renderer = _props.renderer,
        selectedIds = _props.selectedIds,
        onClick = _props.onClick,
        disabled = _props.disabled,
        disabledItemsTooltip = _props.disabledItemsTooltip;

    return React.createElement(
      AutoSizer,
      null,
      function (_ref) {
        var width = _ref.width;
        return React.createElement(InnerList, {
          getlistRef: _this2.getlistRef,
          rowRenderer: _this2.rowRenderer,
          noRowsRenderer: _this2.noRowsRenderer,
          width: width - offset,
          rowHeight: itemHeight,
          height: height,
          rowCount: items.length,
          noItemsMessage: noItemsMessage,
          noItemsRenderer: noItemsRenderer,
          renderer: renderer,
          itemHeight: itemHeight,
          onClick: onClick,
          items: items,
          selectedIds: selectedIds,
          disabled: disabled,
          disabledItemsTooltip: disabledItemsTooltip
        });
      }
    );
  };

  return ItemsList;
}(PureComponent), _class.defaultProps = {
  itemHeight: 40,
  height: 400,
  offset: 0,
  selectedIds: [],
  items: [],
  disabled: false
}, _temp);
ItemsList.propTypes = process.env.NODE_ENV !== "production" ? {
  renderer: PropTypes.any,
  noItemsRenderer: PropTypes.any,
  itemHeight: PropTypes.number,
  height: PropTypes.number,
  offset: PropTypes.number,
  onClick: PropTypes.func,
  selectedIds: PropTypes.arrayOf(PropTypes.number),
  items: PropTypes.array,
  disabled: PropTypes.bool,
  disabledItemsTooltip: PropTypes.string
} : {};


export default ItemsList;