"use strict";

exports.__esModule = true;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
// import withDialog from "./enhancers/withDialog";


exports.default = showDialogOnDocBody;

var _reactDom = require("react-dom");

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _uniqid = require("uniqid");

var _uniqid2 = _interopRequireDefault(_uniqid);

var _core = require("@blueprintjs/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//this is only really useful for unconnected standalone simple dialogs
//remember to pass usePortal={false} to the <Dialog/> component so it will close properly
function showDialogOnDocBody(DialogComp) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var dialogHolder = document.createElement("div");
  var className = "myDialog" + (0, _uniqid2.default)();
  dialogHolder.className = className;
  document.body.appendChild(dialogHolder);
  var onClose = function onClose() {
    document.querySelector("." + className).remove();
  };
  var DialogCompToUse = void 0;
  if (options.addDialogContainer) {
    DialogCompToUse = function DialogCompToUse(props) {
      return _react2.default.createElement(
        _core.Dialog,
        _extends({
          usePortal: false,
          title: "pass a {title} prop",
          isOpen: true
        }, props),
        _react2.default.createElement(DialogComp, _extends({}, props, {
          hideModal: onClose,
          onClose: onClose
        }))
      );
    };
  } else {
    DialogCompToUse = DialogComp;
  }
  _reactDom2.default.render(_react2.default.createElement(DialogCompToUse, _extends({ hideModal: onClose, onClose: onClose }, options)), dialogHolder);
}
module.exports = exports["default"];