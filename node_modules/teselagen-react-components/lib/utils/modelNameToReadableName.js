"use strict";

exports.__esModule = true;
exports.setModelLowercaseMap = exports.setModelUppercaseMap = undefined;
exports.default = modelNameToReadableName;

var _lodash = require("lodash");

var _pluralize = require("pluralize");

var _pluralize2 = _interopRequireDefault(_pluralize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var modelNameMap = {},
    upperModelNameMap = {};

var setModelUppercaseMap = exports.setModelUppercaseMap = function setModelUppercaseMap(map) {
  upperModelNameMap = map;
};

var setModelLowercaseMap = exports.setModelLowercaseMap = function setModelLowercaseMap(map) {
  modelNameMap = map;
};

function modelNameToReadableName(modelName) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      upperCase = _ref.upperCase,
      sanitize = _ref.sanitize,
      plural = _ref.plural;

  var modelNameToUse = modelName;
  if (upperCase) {
    modelNameToUse = upperModelNameMap[modelNameToUse] || (0, _lodash.startCase)(modelNameToUse);
  } else {
    modelNameToUse = modelNameMap[modelNameToUse] || (0, _lodash.lowerCase)(modelNameToUse);
  }
  if (sanitize) {
    modelNameToUse = sanitize(modelNameToUse);
  }
  if (/^j 5/i.test(modelNameToUse)) {
    modelNameToUse = modelNameToUse.replace(/^j 5/i, "j5");
  }
  if (plural) modelNameToUse = (0, _pluralize2.default)(modelNameToUse);
  if (modelName === "j5Report") modelNameToUse += " (j5)";
  return modelNameToUse;
}